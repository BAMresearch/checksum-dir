#!/bin/sh
set -e
dn="$1"
if [ -z "$dn" ]; then
    echo "Usage: '$0' [<path to create checksums for> | <checksum file>]"
    echo "1. Calculates checksums of all files in the given path recursively."
    echo "   The checksums are stored with relative paths in a file"
    echo "   'check_<datetimestamp>.sha256' in the given directory."
    echo "2. When verifying checksums, it works with relative paths based on"
    echo "   the checksum file location and absolute paths."
    exit 1
fi
CHK160=/usr/bin/sha1sum
CHK256=/usr/bin/sha256sum
CHKB2=/usr/bin/b2sum
GREP=/usr/bin/grep
FIND=/usr/bin/find
# Check that the required commands exist
for cmd in $CHK160 $CHK256 $CHKB2 $GREP $FIND; do
    command -v $cmd > /dev/null || (echo "Required command '$cmd' not found! Giving up."; exit 1)
done
# Switch behavior depending on argument being a file or a directory
if [ -f "$dn" ]; then
    echo "Verifying checksums from '$dn':"
    $GREP -q '^[A-Fa-f0-9]\{40\}\s' "$dn" && CHK="$CHK160"
    $GREP -q '^[A-Fa-f0-9]\{64\}\s' "$dn" && CHK="$CHK256"
    $GREP -q '^[A-Fa-f0-9]\{128\}\s' "$dn" && CHK="$CHKB2"
    [ -z "$CHK" ] && (echo "Checksum algorithm not found!"; exit 1)
    cd "$(dirname "$dn")"
    fn="$(basename "$dn")"
    "$CHK" -c "$fn" | $GREP -v 'OK$' || echo "All good!"
    notCovered="$($FIND . -type f -printf '%P\n' | xargs -I{} sh -c "$GREP -q '{}' '$fn' || echo '{}'" | $GREP -v "$fn")"
    [ -z "$notCovered" ] || (echo "Files not covered:"; echo "$notCovered")
    exit 0
fi
# is a directory? anything else leads to errors anyway
cd "$dn" || (echo "Could not change dir to '$dn'!"; exit 1)
fn="check_$(date +%y%m%d%H%M%S).sha256"
echo "Creating '$(pwd)/$fn':"
$FIND . -type f -not -name "$fn" -exec "$CHK256" -b {} \; | tee "$fn"

